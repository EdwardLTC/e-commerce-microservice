/**
 * This file is auto-generated by nestjs-proto-gen-ts
 */

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace com {
  export namespace ecommerce {
    export namespace springboot {
      export namespace product {
        export namespace v1 {
          export interface ProductService {
            getProducts(data: GetProductsRequest, metadata?: Metadata, ...rest: any[]): Observable<GetProductsResponse>;
            createProduct(data: CreateProductRequest, metadata?: Metadata, ...rest: any[]): Observable<CreateProductResponse>;
          }
          export interface GetProductsRequest {
            skip?: google.protobuf.Int32Value;
            take?: google.protobuf.Int32Value;
          }
          export interface GetProductsResponse {
            products?: v1.Product[];
          }
          export interface CreateProductRequest {
            name?: google.protobuf.StringValue;
            sellerId?: google.protobuf.StringValue;
            description?: google.protobuf.StringValue;
            brand?: google.protobuf.StringValue;
            mediaUrls?: string[];
          }
          export interface CreateProductResponse {
            id?: string;
          }
          export interface Product {
            id?: string;
            name?: string;
            description?: string;
            brand?: string;
            minPrice?: number;
            maxPrice?: number;
            totalSaleCount?: number;
            rating?: number;
            mediaUrls?: string[];
          }
        }
      }
    }
  }
}
export namespace google {
  export namespace protobuf {
    export interface Timestamp {
      seconds?: number;
      nanos?: number;
    }
    export interface DoubleValue {
      value?: number;
    }
    export interface FloatValue {
      value?: number;
    }
    export interface Int64Value {
      value?: number;
    }
    export interface UInt64Value {
      value?: number;
    }
    export interface Int32Value {
      value?: number;
    }
    export interface UInt32Value {
      value?: number;
    }
    export interface BoolValue {
      value?: boolean;
    }
    export interface StringValue {
      value?: string;
    }
    export interface BytesValue {
      value?: Uint8Array;
    }
  }
}
