/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace com {
    export namespace ecommerce {
        export namespace springboot {
            export namespace product {
                export namespace v1 {
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    // Services
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    export interface ProductService {
                        getProducts(
                            data: GetProductsRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<GetProductsResponse>;
                        getProductDetail(
                            data: GetProductDetailRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<GetProductDetailResponse>;
                        createProduct(
                            data: CreateProductRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<CreateProductResponse>;
                    }
                    export interface OptionService {
                        createOptionType(
                            data: CreateOptionTypeRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<CreateOptionTypeResponse>;
                        getOptionTypes(
                            data: GetOptionTypesRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<GetOptionTypesResponse>;
                        createOptionValue(
                            data: CreateOptionValueRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<CreateOptionValueResponse>;
                        getOptionValues(
                            data: GetOptionValuesRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<GetOptionValuesResponse>;
                    }
                    export interface VariantService {
                        createVariant(
                            data: CreateVariantRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<CreateVariantResponse>;
                    }
                    export interface StockService {
                        reserveStock(
                            data: ReserveStockRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<ReserveStockResponse>;
                        releaseStock(
                            data: ReleaseStockRequest,
                            metadata?: Metadata,
                            ...rest: any[]
                        ): Observable<google.protobuf.DoubleValue>;
                    }
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    // Product Messages
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    export interface GetProductsRequest {
                        skip?: google.protobuf.Int32Value;
                        take?: google.protobuf.Int32Value;
                    }
                    export interface GetProductsResponse {
                        products?: v1.Product[];
                    }
                    export interface GetProductDetailRequest {
                        id?: google.protobuf.StringValue;
                    }
                    export interface GetProductDetailResponse {
                        id?: string;
                        name?: string;
                        description?: string;
                        brand?: string;
                        totalSaleCount?: number;
                        averageRating?: number;
                        mediaUrls?: string[];
                        optionTypes?: v1.OptionType[];
                        variants?: v1.Variant[];
                    }
                    export interface CreateProductRequest {
                        name?: google.protobuf.StringValue;
                        sellerId?: google.protobuf.StringValue;
                        description?: google.protobuf.StringValue;
                        brand?: google.protobuf.StringValue;
                        mediaUrls?: string[];
                    }
                    export interface CreateProductResponse {
                        id?: string;
                    }
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    // Option Messages
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    export interface CreateOptionTypeRequest {
                        productId?: google.protobuf.StringValue;
                        name?: google.protobuf.StringValue;
                        displayOrder?: google.protobuf.Int32Value;
                    }
                    export interface CreateOptionTypeResponse {
                        id?: string;
                    }
                    export interface GetOptionTypesRequest {
                        productId?: google.protobuf.StringValue;
                    }
                    export interface GetOptionTypesResponse {
                        optionTypes?: v1.OptionType[];
                    }
                    export interface CreateOptionValueRequest {
                        optionTypeId?: google.protobuf.StringValue;
                        value?: google.protobuf.StringValue;
                        mediaUrl?: google.protobuf.StringValue;
                        displayOrder?: google.protobuf.Int32Value;
                    }
                    export interface CreateOptionValueResponse {
                        id?: string;
                    }
                    export interface GetOptionValuesRequest {
                        optionTypeId?: google.protobuf.StringValue;
                    }
                    export interface GetOptionValuesResponse {
                        optionValues?: v1.OptionValue[];
                    }
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    // Variant Messages
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    export interface CreateVariantRequest {
                        productId?: google.protobuf.StringValue;
                        sku?: google.protobuf.StringValue;
                        price?: google.protobuf.DoubleValue;
                        stock?: google.protobuf.Int32Value;
                        mediaUrl?: google.protobuf.StringValue;
                        options?: string[];
                    }
                    export interface CreateVariantResponse {
                        id?: string;
                    }
                    export interface ReserveStockRequest {
                        items?: v1.VariantItem[];
                    }
                    export interface ReserveStockResponse {
                        reservationId?: string;
                        variants?: ReserveStockResponse.VariantWithProduct[];
                    }
                    export namespace ReserveStockResponse {
                        export interface VariantWithProduct {
                            id?: string;
                            sku?: string;
                            price?: number;
                            salePrice?: number;
                            stock?: number;
                            mediaUrl?: string;
                            productId?: string;
                            productName?: string;
                        }
                    }
                    export interface ReleaseStockRequest {
                        reservationId?: string;
                    }
                    export interface VariantItem {
                        variantId?: string;
                        quantity?: number;
                    }
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    // Domain Models
                    // &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
                    export interface Product {
                        id?: string;
                        name?: string;
                        description?: string;
                        brand?: string;
                        minPrice?: number;
                        maxPrice?: number;
                        totalSaleCount?: number;
                        rating?: number;
                        mediaUrls?: string[];
                    }
                    export interface OptionType {
                        id?: string;
                        name?: string;
                        displayOrder?: number;
                        optionValues?: v1.OptionValue[];
                    }
                    export interface OptionValue {
                        id?: string;
                        value?: string;
                        mediaUrl?: string;
                        displayOrder?: number;
                    }
                    export interface Variant {
                        id?: string;
                        sku?: string;
                        price?: number;
                        salePrice?: number;
                        stock?: number;
                        status?: string;
                        mediaUrl?: string;
                        selectedOptions?: v1.SelectedOption[];
                    }
                    export interface SelectedOption {
                        optionTypeId?: string;
                        optionValueId?: string;
                    }
                }
            }
        }
    }
}
export namespace google {
    export namespace protobuf {
        export interface DoubleValue {
            value?: number;
        }
        export interface FloatValue {
            value?: number;
        }
        export interface Int64Value {
            value?: number;
        }
        export interface UInt64Value {
            value?: number;
        }
        export interface Int32Value {
            value?: number;
        }
        export interface UInt32Value {
            value?: number;
        }
        export interface BoolValue {
            value?: boolean;
        }
        export interface StringValue {
            value?: string;
        }
        export interface BytesValue {
            value?: Uint8Array;
        }
    }
}

